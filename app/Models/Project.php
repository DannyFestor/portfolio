<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Spatie\Image\Manipulations;
use Spatie\MediaLibrary\HasMedia;
use Spatie\MediaLibrary\InteractsWithMedia;
use Spatie\MediaLibrary\MediaCollections\Models\Media;

class Project extends Model implements HasMedia
{
    use HasFactory;
    use InteractsWithMedia;

    protected $fillable = [
        'title_en',
        'title_de',
        'title_ja',
        'body_en',
        'body_de',
        'body_ja',
        'display',
        'sort',
        'media',
        'git_url',
        'live_url',
    ];

    protected $casts = [
        'display' => 'boolean',
    ];

    public function registerMediaConversions(Media $media = null): void
    {
        $this
            ->addMediaConversion('preview')
            ->width(300)
            //->fit(Manipulations::FIT_CROP, 300, 300)
            ->nonQueued();
    }

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::creating(function (self $model) {
            $sort = 1;
            $project = self::orderBy('sort', 'desc')->first();
            if ($project) {
                $sort = max($sort, $project->sort + 1);
            }
            $model->sort = $sort;
        });
    }
}
